version: "3.8"

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: ../docker/react/Dockerfile
    container_name: frontend
    working_dir: /app
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=development
    stdin_open: true
    tty: true
    networks:
      - app-network

  php:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
      args:
        APP_USER_ID: ${APP_USER_ID}
        APP_USER_NAME: ${APP_USER_NAME}
    container_name: php
    working_dir: /var/www
    volumes:
      - ./backend:/var/www
    depends_on:
      - mysql
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"  # ← ここがホスト:コンテナ
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/dist:/usr/share/nginx/html
      - ./backend:/var/www/public
    depends_on:
      - php
    networks:
      - app-network

  mysql:
    image: mysql:8.4
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: laravel_db
      MYSQL_USER: laravel_user
      MYSQL_PASSWORD: laravel_pass
    volumes:
      - ./docker/mysql/data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=mysql
      - PMA_USER=laravel_user
      - PMA_PASSWORD=laravel_pass
    depends_on:
      - mysql
    ports:
      - "8080:80"
    networks:
      - app-network

  python:
    build:
      context: ./docker/python
      dockerfile: Dockerfile
    container_name: python
    working_dir: /app
    volumes:
      - ./apis/python/app:/app
    ports:
      - "8001:8000"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

